{"version":3,"sources":["components/Header.js","components/Navigation.js","components/Home.js","components/Search.js","components/University.js","pages/UniversityPage.js","pages/FieldsOfStudyPage.js","components/App.js","serviceWorker.js","index.js"],"names":["Header","react_default","a","createElement","className","library","add","faHome","faUniversity","faSearch","Navigation","react_router_dom","to","exact","react_fontawesome_index_es","icon","Home","props","university","length","isLoaded","map","item","i","fields","reduce","b","numberOfAllFieldsOfStudy","Object","keys","student","polsl","informatics","automatics","electronics","wroclaw","architecture","chemistry","transport","warsaw","mechatronics","biotechnology","mathematics","pedagogy","numberOfAllStudents","Search","state","value","value_fields","handleSearch","e","_this","setState","target","handleFieldsOfStudy","handleFilterUniversity","filter","name","toLowerCase","includes","key","id","concat","ref","handleFilterFieldsOfStudy","type","placeholder","this","onChange","Component","University","_ref","data","Fragment","faMapMarkerAlt","faAt","faPhone","UniversityPage","_props$university","address","email","phone","path","slice","fieldsOfStudy","universityId","nameOfStudyField","FieldsOfStudyPage","_useState","useState","_useState2","slicedToArray","activeBtn","setActiveBtn","match","params","url","idUrl","_props$fieldsOfStudy$","startDate","studentsLimit","grade","studentsList","firstName","lastName","activeViev","gender","age","averageGrade","studentStatus","onClick","App","_this2","fetch","then","response","ok","Error","json","prevState","definitions","FieldOfStudy","Student","catch","err","console","log","_this$state","basename","components_Header","react_router","render","components_Home","components_University","components_Search","pages_UniversityPage","pages_FieldsOfStudyPage","components_Navigation","Boolean","window","location","hostname","ReactDOM","components_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"6aASeA,SANA,WACX,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBAAf,8CCERC,IAAQC,IAAIC,IAAQC,IAAcC,KAElC,IAYeC,EAZI,WACjB,OACET,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,QACZH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cAAaH,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CAASC,GAAG,IAAIC,OAAK,EAACT,UAAU,mBAAmBH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAiBV,UAAU,mBAAmBW,KAAK,SAAtG,SAC3Bd,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cAAaH,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CAASC,GAAG,cAAcC,OAAK,EAACT,UAAU,mBAAmBH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAiBV,UAAU,mBAAmBW,KAAK,eAAhH,eAC3Bd,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cAAaH,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CAASC,GAAG,UAAUC,OAAK,EAACT,UAAU,mBAAmBH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAiBV,UAAU,mBAAmBW,KAAK,WAA5G,cCgBpBC,SA5BF,SAACC,GAkBZ,OACEhB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,eAAd,eACAH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,cAAhB,+BAA0Da,EAAMC,WAAWC,QAC3ElB,EAAAC,EAAAC,cAAA,QAAMC,UAAU,cAAhB,kCAd6B,WAC/B,GAAIa,EAAMG,SAKR,OAJeH,EAAMC,WAAWG,IAAI,SAACC,EAAMC,GACzC,OAAOD,EAAKE,OAAOL,SAGNM,OAAO,SAAUvB,EAAGwB,GAAK,OAAOxB,EAAIwB,GAAK,GAQKC,IAC7D1B,EAAAC,EAAAC,cAAA,QAAMC,UAAU,cAAhB,2BArBwB,WAC1B,GAAIa,EAAMG,SACR,OAAQQ,OAAOC,KAAKZ,EAAMa,QAAQC,MAAMC,aAAab,OAASS,OAAOC,KAAKZ,EAAMa,QAAQC,MAAME,YAAYd,OAASS,OAAOC,KAAKZ,EAAMa,QAAQC,MAAMG,aAAaf,OAASS,OAAOC,KAAKZ,EAAMa,QAAQK,QAAQC,cAAcjB,OAASS,OAAOC,KAAKZ,EAAMa,QAAQK,QAAQE,WAAWlB,OAASS,OAAOC,KAAKZ,EAAMa,QAAQK,QAAQG,WAAWnB,SAAWS,OAAOC,KAAKZ,EAAMa,QAAQS,OAAOC,cAAcrB,OAASS,OAAOC,KAAKZ,EAAMa,QAAQS,OAAOE,eAAetB,OAASS,OAAOC,KAAKZ,EAAMa,QAAQS,OAAOG,aAAavB,OAASS,OAAOC,KAAKZ,EAAMa,QAAQS,OAAOI,UAAUxB,OAmB7eyB,OCwC7CC,oNA7DbC,MAAQ,CACNC,MAAO,GACPC,aAAc,MAQhBC,aAAe,SAAAC,GACbC,EAAKC,SAAS,CACZL,MAAOG,EAAEG,OAAON,MAChBC,aAAc,QAIlBM,oBAAsB,SAAAJ,GACpBC,EAAKC,SAAS,CACZJ,aAAcE,EAAEG,OAAON,MACvBA,MAAO,QAIXQ,uBAAyB,WACvB,GAAIJ,EAAKL,MAAMC,MACb,OAAOI,EAAKlC,MAAMC,WAAWsC,OAAO,SAAAlC,GAAI,OAAIA,EAAKmC,KAAKC,cAAcC,SAASR,EAAKL,MAAMC,MAAMW,iBAAgBrC,IAAI,SAAAC,GAAI,OACpHrB,EAAAC,EAAAC,cAAA,MAAIyD,IAAKtC,EAAKuC,IAAI5D,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CAASP,UAAU,mBAAmBQ,GAAE,cAAAkD,OAAgBxC,EAAKyC,MAAQzC,EAAKmC,YAKlGO,0BAA4B,WAC1B,GAAIb,EAAKlC,MAAMG,UAAY+B,EAAKL,MAAME,aAMpC,OALeG,EAAKlC,MAAMC,WAAWG,IAAI,SAACC,GAAD,OAAUA,EAAKE,SAC/BC,OAAO,SAAUvB,EAAGwB,GAC3C,OAAOxB,EAAE4D,OAAOpC,IACf,IAEc8B,OAAO,SAAAlC,GAAI,OAAIA,EAAKoC,cAAcC,SAASR,EAAKL,MAAME,aAAaU,iBAAgBrC,IAAI,SAACC,EAAMC,GAAP,OACtGtB,EAAAC,EAAAC,cAAA,MAAIC,UAAU,yBAAyBwD,IAAKrC,GAAID,8EAMpD,OAEErB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,iBAAd,WACAH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,gBAAgB6D,KAAK,OAAOC,YAAY,yBAAyBnB,MAAOoB,KAAKrB,MAAMC,MAAOqB,SAAUD,KAAKlB,aAAcQ,KAAK,UAC7IxD,EAAAC,EAAAC,cAAA,SAAOC,UAAU,gBAAgB6D,KAAK,OAAOC,YAAY,4BAA4BnB,MAAOoB,KAAKrB,MAAME,aAAcoB,SAAUD,KAAKb,oBAAqBG,KAAK,iBAE9JxD,EAAAC,EAAAC,cAAA,MAAIC,UAAU,gBAAgB+D,KAAKZ,0BAC/BY,KAAKrB,MAAMC,OAASoB,KAAKH,qCAvDhBK,cCmBNC,SApBI,SAAAC,GAA8B,IAE3CC,EAFgBpD,EAA2BmD,EAA3BnD,SAAUF,EAAiBqD,EAAjBrD,WAS9B,OANIE,IACFoD,EAAOtD,EAAWG,IAAI,SAAAC,GAAI,OACxBrB,EAAAC,EAAAC,cAAA,MAAIC,UAAU,iBAAiBwD,IAAKtC,EAAKuC,IAAI5D,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CAASP,UAAU,qBAAqBQ,GAAE,cAAAkD,OAAgBxC,EAAKyC,MAAQzC,EAAKmC,UAK3HxD,EAAAC,EAAAC,cAAAF,EAAAC,EAAAuE,SAAA,KACExE,EAAAC,EAAAC,cAAA,KAAGC,UAAU,oBAAb,yBACAH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cACXoE,YCTTnE,IAAQC,IAAIoE,IAAgBC,IAAMC,KAElC,IA4BeC,EA5BQ,SAAC5D,GAEpB,IAF8B6D,EASU7D,EAAMC,WAAtCuC,EATsBqB,EAStBrB,KAAMsB,EATgBD,EAShBC,QAASC,EATOF,EASPE,MAAOC,EATAH,EASAG,MAE9B,OACIhF,EAAAC,EAAAC,cAAAF,EAAAC,EAAAuE,SAAA,KACIxE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,0BAA0BqD,GACxCxD,EAAAC,EAAAC,cAAA,KAAGC,UAAU,uBAAsBH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAiBV,UAAU,4BAA4BW,KAAK,mBAA/F,IAAoHgE,GACpH9E,EAAAC,EAAAC,cAAA,KAAGC,UAAU,uBAAsBH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAiBV,UAAU,4BAA4BW,KAAK,OAA/F,IAAwGiE,GACxG/E,EAAAC,EAAAC,cAAA,KAAGC,UAAU,uBAAsBH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAiBV,UAAU,4BAA4BW,KAAK,UAA/F,IAA2GkE,GAE3GhF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,6BAAd,oBACAH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,yBAlBE,WACxB,IAAM8E,EAAOjE,EAAMC,WAAW6C,IAAIoB,MAAM,GACxC,OACIlE,EAAMmE,cAAcF,GAAM7D,IAAI,SAAAC,GAAI,OAAIrB,EAAAC,EAAAC,cAAA,MAAIyD,IAAKtC,EAAK+D,cAAcpF,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CAASP,UAAU,4BAA4BQ,GAAE,eAAAkD,OAAiBoB,GAAjBpB,OAAwBxC,EAAK4D,OAAS5D,EAAKgE,qBAgBrJhC,eCoDNiC,SA/EW,SAACtE,GAAU,IAAAuE,EAEDC,oBAAS,GAFRC,EAAA9D,OAAA+D,EAAA,EAAA/D,CAAA4D,EAAA,GAE5BI,EAF4BF,EAAA,GAEjBG,EAFiBH,EAAA,GAI7BvE,EAAM,GAAA2C,OAAM7C,EAAM6E,MAAMC,OAAOlC,GAAG1C,OAAS,GAC3C+D,EAAOjE,EAAM6E,MAAME,IAAIb,MAAM,IAAKhE,GAClC8E,EAAQhF,EAAM6E,MAAMC,OAAOlC,GANEqC,EAoC2BjF,EAAMmE,cAAcF,GA5BtD,WAC1B,GAAa,UAATA,EACF,OAAQjE,EAAM6E,MAAMC,OAAOlC,IACzB,IAAK,cAAe,OAAO,EAC3B,IAAK,aAAc,OAAO,EAC1B,IAAK,cAAe,OAAO,EAC3B,QAAS,OAAO,KAGpB,GAAa,YAATqB,EACF,OAAQjE,EAAM6E,MAAMC,OAAOlC,IACzB,IAAK,eAAgB,OAAO,EAC5B,IAAK,YAAa,OAAO,EACzB,IAAK,YAAa,OAAO,EACzB,QAAS,OAAO,KAGpB,GAAa,WAATqB,EACF,OAAQjE,EAAM6E,MAAMC,OAAOlC,IACzB,IAAK,eAAgB,OAAO,EAC5B,IAAK,gBAAiB,OAAO,EAC7B,IAAK,cAAe,OAAO,EAC3B,IAAK,WAAY,OAAO,EACxB,QAAS,OAAO,MAKkEP,IAAhFgC,EApC2BY,EAoC3BZ,iBAAkBa,EApCSD,EAoCTC,UAAWC,EApCFF,EAoCEE,cAAeC,EApCjBH,EAoCiBG,MAE9CC,EAAerF,EAAMa,QAAQoD,GAAMe,GAAO5E,IAAI,SAAAC,GAAI,OACtDrB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,6BAA6BwD,IAAKtC,EAAKuC,IACpD5D,EAAAC,EAAAC,cAAA,QAAMC,UAAU,kCAAhB,eAA8DkB,EAAKiF,WACnEtG,EAAAC,EAAAC,cAAA,QAAMC,UAAU,kCAAhB,cAA6DkB,EAAKkF,UAClEvG,EAAAC,EAAAC,cAAA,QAAMC,UAAU,wCAKdqG,EAAaxF,EAAMa,QAAQoD,GAAMe,GAAO5E,IAAI,SAAAC,GAAI,OACpDrB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,6BAA6BwD,IAAKtC,EAAKuC,IACpD5D,EAAAC,EAAAC,cAAA,QAAMC,UAAU,kCAAhB,eAA8DkB,EAAKiF,WACnEtG,EAAAC,EAAAC,cAAA,QAAMC,UAAU,kCAAhB,cAA6DkB,EAAKkF,UAClEvG,EAAAC,EAAAC,cAAA,QAAMC,UAAU,kCAAhB,WAA0DkB,EAAKoF,QAC/DzG,EAAAC,EAAAC,cAAA,QAAMC,UAAU,kCAAhB,QAAuDkB,EAAKqF,KAC5D1G,EAAAC,EAAAC,cAAA,QAAMC,UAAU,kCAAhB,UAAyDkB,EAAK0D,OAC9D/E,EAAAC,EAAAC,cAAA,QAAMC,UAAU,kCAAhB,UAAyDkB,EAAK2D,OAC9DhF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,kCAAhB,kBAAiEkB,EAAKsF,cACtE3G,EAAAC,EAAAC,cAAA,QAAMC,UAAU,kCAAhB,mBAAkEkB,EAAKuF,eACvE5G,EAAAC,EAAAC,cAAA,QAAMC,UAAU,wCAIpB,OACEH,EAAAC,EAAAC,cAAAF,EAAAC,EAAAuE,SAAA,KACExE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACbH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,qBAAqBkF,GACrCrF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,qBAAhB,eAAiD+F,GACjDlG,EAAAC,EAAAC,cAAA,QAAMC,UAAU,qBAAhB,mBAAqDgG,GACrDnG,EAAAC,EAAAC,cAAA,QAAMC,UAAU,qBAAhB,UAA4CiG,GAG5CpG,EAAAC,EAAAC,cAAA,QAAMC,UAAU,wBAAhB,iBAAqDH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,qBAAqB0G,QAAS,kBAAMjB,GAAcD,KAAaA,EAAY,OAAS,UAEzJA,GAAaU,EACfrG,EAAAC,EAAAC,cAAA,WAAMyF,GAAa3F,EAAAC,EAAAC,cAAA,WAAMsG,QCsBlBM,6MApFbjE,MAAQ,CACN5B,WAAY,GACZkE,cAAe,GACftD,QAAS,KACTV,UAAU,sFAGQ,IAAA4F,EAAA7C,KAClB8C,MAAM,0BACHC,KAAK,SAAAC,GACJ,GAAIA,EAASC,GACX,OAAOD,EAET,MAAME,MAAM,WAEbH,KAAK,SAAAC,GAAQ,OAAIA,EAASG,SAC1BJ,KAAK,SAAA1C,GACJwC,EAAK5D,SAAS,SAAAmE,GAAS,MAAK,CAC1BnG,UAAU,EACVF,WAAYsD,EAAKgD,YAAYlD,WAC7Bc,cAAeZ,EAAKgD,YAAYC,aAChC3F,QAAS0C,EAAKgD,YAAYE,aAG7BC,MAAM,SAAAC,GACLC,QAAQC,IAAIF,GACZZ,EAAK5D,SAAS,SAAAmE,GAAS,MAAK,wCAOzB,IAAAQ,EACkD5D,KAAKrB,MAAtD1B,EADD2G,EACC3G,SAAUF,EADX6G,EACW7G,WAAYkE,EADvB2C,EACuB3C,cAAetD,EADtCiG,EACsCjG,QAC7C,OACE7B,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CAAQqH,SAAS,kBACf/H,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,UAChBH,EAAAC,EAAAC,cAAC8H,EAAD,OAGFhI,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAA,WAASC,UAAU,SACjBH,EAAAC,EAAAC,cAAC+H,EAAA,EAAD,KACEjI,EAAAC,EAAAC,cAAC+H,EAAA,EAAD,CAAOhD,KAAK,IAAIrE,OAAK,EAACsH,OAAQ,kBAAOlI,EAAAC,EAAAC,cAACiI,EAAD,CAAMlH,WAAYA,EAAYY,QAASA,EAASV,SAAUA,OAC/FnB,EAAAC,EAAAC,cAAC+H,EAAA,EAAD,CAAOhD,KAAK,cAAcrE,OAAK,EAACsH,OAAQ,kBAAOlI,EAAAC,EAAAC,cAACkI,EAAD,CAC7CnH,WAAYA,EACZE,SAAUA,OACZnB,EAAAC,EAAAC,cAAC+H,EAAA,EAAD,CAAOhD,KAAK,UAAUrE,OAAK,EAACsH,OAAQ,kBAClClI,EAAAC,EAAAC,cAACmI,EAAD,CACEpH,WAAYA,EACZE,SAAUA,OAGbF,EAAWG,IAAI,SAAAC,GAAI,OAClBrB,EAAAC,EAAAC,cAAC+H,EAAA,EAAD,CAAOhD,KAAI,cAAApB,OAAgBxC,EAAKyC,KAAOlD,OAAK,EAAC+C,IAAKtC,EAAKuC,GAAIsE,OAAQ,kBACjElI,EAAAC,EAAAC,cAACoI,EAAD,CACErH,WAAYI,EACZ8D,cAAeA,SAGpBlE,EAAWG,IAAI,SAAAC,GAAI,OAClBrB,EAAAC,EAAAC,cAAC+H,EAAA,EAAD,CAAOhD,KAAI,cAAApB,OAAgBxC,EAAKyC,IAArB,QAAgCH,IAAKtC,EAAKuC,GAAIsE,OAAQ,SAAA5D,GAAA,IAAGuB,EAAHvB,EAAGuB,MAAH,OAC/D7F,EAAAC,EAAAC,cAACqI,EAAD,CACEpD,cAAeA,EACfU,MAAOA,EACPhE,QAASA,WAOnB7B,EAAAC,EAAAC,cAAA,WAASC,UAAU,cACjBH,EAAAC,EAAAC,cAACsI,EAAD,iBA7EIpE,aCAEqE,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAAS/C,MACvB,2DCZNgD,IAASX,OAAOlI,EAAAC,EAAAC,cAAC4I,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMlC,KAAK,SAAAmC,GACjCA,EAAaC","file":"static/js/main.29f7f0f8.chunk.js","sourcesContent":["import React from 'react';\r\nimport '../styles/Header.css';\r\n\r\nconst Header = () => {\r\n    return (\r\n        <div className=\"header__desc\">Student App</div>\r\n    );\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport '../styles/Navigation.css';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { library } from '@fortawesome/fontawesome-svg-core'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faHome, faUniversity, faSearch } from '@fortawesome/free-solid-svg-icons'\r\n\r\nlibrary.add(faHome, faUniversity, faSearch)\r\n\r\nconst Navigation = () => {\r\n  return (\r\n    <nav className=\"nav\">\r\n      <ul className=\"menu\">\r\n        <li className=\"menu__item\"><NavLink to=\"/\" exact className=\"menu__item--btn\" ><FontAwesomeIcon className=\"menu__item--icon\" icon=\"home\" />Home</NavLink></li>\r\n        <li className=\"menu__item\"><NavLink to=\"/university\" exact className=\"menu__item--btn\" ><FontAwesomeIcon className=\"menu__item--icon\" icon=\"university\" />University</NavLink></li>\r\n        <li className=\"menu__item\"><NavLink to=\"/search\" exact className=\"menu__item--btn\" ><FontAwesomeIcon className=\"menu__item--icon\" icon=\"search\" />Search</NavLink></li>\r\n      </ul>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default Navigation;","import React from 'react';\r\nimport '../styles/Home.css';\r\n\r\nconst Home = (props) => {\r\n\r\n  const numberOfAllStudents = () => {\r\n    if (props.isLoaded) {\r\n      return (Object.keys(props.student.polsl.informatics).length + Object.keys(props.student.polsl.automatics).length + Object.keys(props.student.polsl.electronics).length + Object.keys(props.student.wroclaw.architecture).length + Object.keys(props.student.wroclaw.chemistry).length + Object.keys(props.student.wroclaw.transport).length + + Object.keys(props.student.warsaw.mechatronics).length + Object.keys(props.student.warsaw.biotechnology).length + Object.keys(props.student.warsaw.mathematics).length + Object.keys(props.student.warsaw.pedagogy).length)\r\n    }\r\n  }\r\n\r\n  const numberOfAllFieldsOfStudy = () => {\r\n    if (props.isLoaded) {\r\n      const number = props.university.map((item, i) => {\r\n        return item.fields.length\r\n\r\n      })\r\n      return (number.reduce(function (a, b) { return a + b }, 0))\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"home\">\r\n      <h1 className=\"home__title\">Statistics:</h1>\r\n      <span className=\"home__item\">Number of all universities: {props.university.length}</span>\r\n      <span className=\"home__item\">Number of all fields of study: {numberOfAllFieldsOfStudy()}</span>\r\n      <span className=\"home__item\">Number of all students: {numberOfAllStudents()}</span>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;","import React, { Component } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport '../styles/Search.css';\r\n\r\nclass Search extends Component {\r\n  state = {\r\n    value: \"\",\r\n    value_fields: \"\"\r\n  }\r\n\r\n  // handleSearch = (e) => {\r\n  //   this.setState({\r\n  //     [e.target.name]: e.target.value,\r\n  //   })\r\n\r\n  handleSearch = e => {\r\n    this.setState({\r\n      value: e.target.value,\r\n      value_fields: \"\",\r\n    })\r\n  }\r\n\r\n  handleFieldsOfStudy = e => {\r\n    this.setState({\r\n      value_fields: e.target.value,\r\n      value: \"\",\r\n    })\r\n  }\r\n\r\n  handleFilterUniversity = () => {\r\n    if (this.state.value) {\r\n      return this.props.university.filter(item => item.name.toLowerCase().includes(this.state.value.toLowerCase())).map(item => (\r\n        <li key={item.id}><NavLink className=\"search__list--el\" to={`/university${item.ref}`}>{item.name}</NavLink></li>\r\n      ))\r\n    }\r\n  }\r\n\r\n  handleFilterFieldsOfStudy = () => {\r\n    if (this.props.isLoaded && this.state.value_fields) {\r\n      const fields = this.props.university.map((item) => item.fields)\r\n      const allFields = fields.reduce(function (a, b) {\r\n        return a.concat(b);\r\n      }, []);\r\n\r\n      return allFields.filter(item => item.toLowerCase().includes(this.state.value_fields.toLowerCase())).map((item, i) => (\r\n        <li className=\"search__listFields--el\" key={i}>{item}</li>\r\n      ))\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n\r\n      <div className=\"search\">\r\n        <h1 className=\"search__title\">Search:</h1>\r\n        <input className=\"search__input\" type=\"text\" placeholder=\"Search universities...\" value={this.state.value} onChange={this.handleSearch} name=\"value\" />\r\n        <input className=\"search__input\" type=\"text\" placeholder=\"Search fields of study...\" value={this.state.value_fields} onChange={this.handleFieldsOfStudy} name=\"value_fields\" />\r\n\r\n        <ul className=\"search__list\">{this.handleFilterUniversity()}\r\n          {!this.state.value && this.handleFilterFieldsOfStudy()}\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Search;","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport '../styles/University.css';\r\nconst University = ({ isLoaded, university }) => {\r\n\r\n  let data;\r\n  if (isLoaded) {\r\n    data = university.map(item => (\r\n      <li className=\"university__li\" key={item.id}><NavLink className=\"university__li--el\" to={`/university${item.ref}`}>{item.name}</NavLink></li>\r\n    ))\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <p className=\"university-title\">Choose a university: </p>\r\n      <ul className=\"university\">\r\n        {data}\r\n      </ul>\r\n    </>\r\n\r\n  );\r\n}\r\n\r\nexport default University;","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport '../styles/UniversityPage.css';\r\nimport { library } from '@fortawesome/fontawesome-svg-core'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faMapMarkerAlt, faAt, faPhone } from '@fortawesome/free-solid-svg-icons'\r\n\r\nlibrary.add(faMapMarkerAlt, faAt, faPhone)\r\n\r\nconst UniversityPage = (props) => {\r\n\r\n    const handleFieldsOfStudy = () => {\r\n        const path = props.university.ref.slice(1);\r\n        return (\r\n            props.fieldsOfStudy[path].map(item => <li key={item.universityId}><NavLink className=\"university-page__list--el\" to={`/university/${path}${item.path}`}>{item.nameOfStudyField}</NavLink></li>)\r\n        )\r\n    }\r\n\r\n    const { name, address, email, phone } = props.university;\r\n\r\n    return (\r\n        <>\r\n            <div className=\"university-page\">\r\n                <h1 className=\"university-page__title\">{name}</h1>\r\n                <p className=\"university-page__el\"><FontAwesomeIcon className=\"university-page__el--icon\" icon=\"map-marker-alt\" /> {address}</p>\r\n                <p className=\"university-page__el\"><FontAwesomeIcon className=\"university-page__el--icon\" icon=\"at\" /> {email}</p>\r\n                <p className=\"university-page__el\"><FontAwesomeIcon className=\"university-page__el--icon\" icon=\"phone\" /> {phone}</p>\r\n\r\n                <h2 className=\"university-page__subtitle\">Fields of study:</h2>\r\n                <ul className=\"university-page__list\">\r\n                    {handleFieldsOfStudy()}\r\n                </ul>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default UniversityPage;","import React, { useState } from 'react';\r\nimport '../styles/FieldsOfStudyPage.css'\r\n\r\nconst FieldsOfStudyPage = (props) => {\r\n\r\n  const [activeBtn, setActiveBtn] = useState(false);\r\n\r\n  const length = `${props.match.params.id.length + 1}`\r\n  const path = props.match.url.slice(12, -length);\r\n  const idUrl = props.match.params.id;\r\n\r\n  const handleFieldsOfStudy = () => {\r\n    if (path === \"polsl\") {\r\n      switch (props.match.params.id) {\r\n        case \"informatics\": return 0;\r\n        case \"automatics\": return 1;\r\n        case \"electronics\": return 2;\r\n        default: return null\r\n      }\r\n    }\r\n    if (path === \"wroclaw\") {\r\n      switch (props.match.params.id) {\r\n        case \"architecture\": return 0\r\n        case \"chemistry\": return 1\r\n        case \"transport\": return 2\r\n        default: return null\r\n      }\r\n    }\r\n    if (path === \"warsaw\") {\r\n      switch (props.match.params.id) {\r\n        case \"mechatronics\": return 0;\r\n        case \"biotechnology\": return 1;\r\n        case \"mathematics\": return 2;\r\n        case \"pedagogy\": return 3\r\n        default: return null\r\n      }\r\n    }\r\n  }\r\n\r\n  const { nameOfStudyField, startDate, studentsLimit, grade } = props.fieldsOfStudy[path][handleFieldsOfStudy()]\r\n\r\n  const studentsList = props.student[path][idUrl].map(item => (\r\n    <div className=\"fieldsOfStudy__studentList\" key={item.id}>\r\n      <span className=\"fieldsOfStudy__studentList--el\">First name: {item.firstName}</span>\r\n      <span className=\"fieldsOfStudy__studentList--el\">Last name: {item.lastName}</span>\r\n      <span className=\"fieldsOfStudy__studentList--line\"></span>\r\n    </div>\r\n\r\n  ))\r\n\r\n  const activeViev = props.student[path][idUrl].map(item => (\r\n    <div className=\"fieldsOfStudy__studentList\" key={item.id}>\r\n      <span className=\"fieldsOfStudy__studentList--el\">First name: {item.firstName}</span>\r\n      <span className=\"fieldsOfStudy__studentList--el\">Last name: {item.lastName}</span>\r\n      <span className=\"fieldsOfStudy__studentList--el\">Gender: {item.gender}</span>\r\n      <span className=\"fieldsOfStudy__studentList--el\">Age: {item.age}</span>\r\n      <span className=\"fieldsOfStudy__studentList--el\">Email: {item.email}</span>\r\n      <span className=\"fieldsOfStudy__studentList--el\">Phone: {item.phone}</span>\r\n      <span className=\"fieldsOfStudy__studentList--el\">Average grade: {item.averageGrade}</span>\r\n      <span className=\"fieldsOfStudy__studentList--el\">Student status: {item.studentStatus}</span>\r\n      <span className=\"fieldsOfStudy__studentList--line\"></span>\r\n    </div>\r\n  ))\r\n\r\n  return (\r\n    <>\r\n      <div className=\"fieldsOfStudy\">\r\n        <span className=\"fieldsOfStudy__el\">{nameOfStudyField}</span>\r\n        <span className=\"fieldsOfStudy__el\">Start date: {startDate}</span>\r\n        <span className=\"fieldsOfStudy__el\">Students limit: {studentsLimit}</span>\r\n        <span className=\"fieldsOfStudy__el\">Grade: {grade}</span>\r\n\r\n\r\n        <span className=\"fieldsOfStudy__title\">List students:<button className=\"fieldsOfStudy__btn\" onClick={() => setActiveBtn(!activeBtn)}>{activeBtn ? \"Less\" : \"More\"}</button></span>\r\n\r\n        {!activeBtn && studentsList}\r\n        <div>{activeBtn && <div>{activeViev}</div>}</div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default FieldsOfStudyPage;","import React, { Component } from 'react';\nimport '../styles/App.css';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Header from './Header';\nimport Navigation from './Navigation';\nimport Home from './Home';\nimport Search from './Search';\nimport University from './University';\nimport UniversityPage from '../pages/UniversityPage';\nimport FieldsOfStudyPage from '../pages/FieldsOfStudyPage';\n\n\nclass App extends Component {\n\n  state = {\n    university: [],\n    fieldsOfStudy: {},\n    student: null,\n    isLoaded: false,\n  }\n\n  componentDidMount() {\n    fetch('data/contestModel.json')\n      .then(response => {\n        if (response.ok) {\n          return response;\n        }\n        throw Error(\"Error\");\n      })\n      .then(response => response.json())\n      .then(data => {\n        this.setState(prevState => ({\n          isLoaded: true,\n          university: data.definitions.University,\n          fieldsOfStudy: data.definitions.FieldOfStudy,\n          student: data.definitions.Student\n        }));\n      })\n      .catch(err => {\n        console.log(err)\n        this.setState(prevState => ({\n\n        }));\n      });\n  };\n\n\n  render() {\n    const { isLoaded, university, fieldsOfStudy, student } = this.state;\n    return (\n      <Router basename=\"/student-app/#\">\n        <div className=\"app\">\n          <header className=\"header\">\n            <Header />\n          </header>\n\n          <main>\n            <section className=\"panel\">\n              <Switch>\n                <Route path=\"/\" exact render={() => (<Home university={university} student={student} isLoaded={isLoaded} />)} />\n                <Route path=\"/university\" exact render={() => (<University\n                  university={university}\n                  isLoaded={isLoaded} />)} />\n                <Route path=\"/search\" exact render={() => (\n                  <Search\n                    university={university}\n                    isLoaded={isLoaded}\n                  />)} />\n\n                {university.map(item => (\n                  <Route path={`/university${item.ref}`} exact key={item.id} render={() => (\n                    <UniversityPage\n                      university={item}\n                      fieldsOfStudy={fieldsOfStudy} />)} />\n                ))}\n\n                {university.map(item => (\n                  <Route path={`/university${item.ref}/:id`} key={item.id} render={({ match }) => (\n                    <FieldsOfStudyPage\n                      fieldsOfStudy={fieldsOfStudy}\n                      match={match}\n                      student={student}\n                    />\n                  )}\n                  />))}\n              </Switch>\n            </section>\n\n            <section className=\"navigation\">\n              <Navigation />\n            </section>\n          </main>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}